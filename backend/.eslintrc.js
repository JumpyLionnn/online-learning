module.exports = {
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint/eslint-plugin"],
    "rules": {
        "getter-return": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-extra-semi": "error",
        "no-invalid-regexp": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-unreachable": "error",
        "block-scoped-var": "error",
        "eqeqeq": "error",
        "no-alert": "error",
        "no-extra-bind": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "new-cap": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-trailing-spaces": "error",
        "object-curly-newline": "error",
        "object-curly-spacing": "error",
        "one-var-declaration-per-line": "error",
        "prefer-exponentiation-operator": "error",
        "quote-props": "error",
        "quotes": [2, "double"],
        "semi-style": ["error", "last"],
        "space-before-function-paren": "error",
        "space-in-parens": "error",
        "switch-colon-spacing": "error",
        "arrow-body-style": "error",
        "arrow-parens": "error",
        "arrow-spacing": "error",
        "constructor-super": "off",
        "no-var": "error",
        "prefer-const": "error",

        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/indent": "error",
        "@typescript-eslint/no-extra-parens": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/object-curly-spacing": "error",
        "@typescript-eslint/quotes": ["error", "double"],
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/space-before-function-paren": "error"
    }
};